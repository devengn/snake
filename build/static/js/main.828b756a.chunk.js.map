{"version":3,"sources":["serviceWorker.js","controls.js","constants.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","gameplay.js","index.js","intro.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","KEYS","ENTER","RIGHT","LEFT","UP","DOWN","listeners","lastKey","dispatchListeners","filter","l","key","forEach","cb","addEventListener","evt","toLowerCase","touch","start","x","y","move","listen","id","concat","Math","random","Date","push","listenOnce","splice","findIndex","length","unlisten","t","touches","clientX","clientY","movedX","movedY","diffX","diffY","isMobile","userAgent","_toConsumableArray","arr","Array","isArray","i","arr2","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","gameplay","snake","apple","score","speed","countdown","gameover","directionQueue","direction","$gameplay","document","querySelector","$score","$speed","$direction","$countdown","$gameover","$gameoverInstructions","$canvas","getElementById","width","height","ctx","getContext","vibrate","ms","draw","grey","arguments","undefined","fillStyle","fillRect","collideWithSnake","find","updateScore","hs","parseInt","localStorage","setItem","innerHTML","queueDirection","dir","restart","classList","add","remove","clearRect","_ref","startCountDown","update","head","_objectSpread","neck","appleEaten","collidedWall","collidedSnake","slice","available","floor","Controls","_ref2","timeout","setTimeout","render","_ref3","onResize","$game","setAttribute","rect","getBoundingClientRect","wWidth","innerWidth","wHeight","innerHeight","style","$intro","getItem","Gameplay","intro","preventDefault","passive","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.828b756a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const KEYS = {\n  ENTER: 'ENTER',\n  RIGHT: 'RIGHT',\n  LEFT: 'LEFT',\n  UP: 'UP',\n  DOWN: 'DOWN',\n};\n\nconst listeners = [];\nlet lastKey = KEYS.RIGHT;\n\nfunction dispatchListeners() {\n  listeners\n    .filter(l => l.key === lastKey)\n    .forEach(l => l.cb());\n}\n\nwindow.addEventListener('keydown', (evt) => {\n  const key = evt.key.toLowerCase();\n  switch (key) {\n    case 'w':\n    case 'arrowup':\n      lastKey = KEYS.UP;\n      break;\n\n    case 's':\n    case 'arrowdown':\n      lastKey = KEYS.DOWN;\n      break;\n\n    case 'd':\n    case 'arrowright':\n      lastKey = KEYS.RIGHT;\n      break;\n\n    case 'a':\n    case 'arrowleft':\n      lastKey = KEYS.LEFT;\n      break;\n\n    case 'enter':\n      lastKey = KEYS.ENTER;\n      break;\n\n    default:\n      break;\n  }\n\n  dispatchListeners();\n});\n\n\nconst touch = {\n  start: {\n    x: 0,\n    y: 0,\n  },\n  move: {\n    x: 0,\n    y: 0,\n  },\n};\n\nwindow.addEventListener('touchstart', (evt) => {\n  const t = evt.touches[0];\n  touch.start.x = t.clientX;\n  touch.start.y = t.clientY;\n  touch.move.x = t.clientX;\n  touch.move.y = t.clientY;\n});\n\nwindow.addEventListener('touchmove', (evt) => {\n  const t = evt.touches[0];\n  touch.move.x = t.clientX;\n  touch.move.y = t.clientY;\n});\n\nwindow.addEventListener('touchend', (evt) => {\n  let movedX = touch.move.x - touch.start.x;\n  let movedY = touch.move.y - touch.start.y;\n\n  const diffX = movedX < 0\n    ? movedX * -1\n    : movedX;\n\n  const diffY = movedY < 0\n    ? movedY * -1\n    : movedY;\n\n  if (\n    diffX < 10\n    && diffY < 10\n  ) {\n    // Did not move, pressed ENTER\n    lastKey = KEYS.ENTER;\n  } else if (diffX > diffY) {\n    // Moved horizontally\n    lastKey = movedX < 0\n      ? KEYS.LEFT\n      : KEYS.RIGHT;\n  } else {\n    // Moved vertically\n    lastKey = movedY < 0\n      ? KEYS.UP\n      : KEYS.DOWN;\n  }\n\n  dispatchListeners();\n});\n\nexport function getLastKey() {\n  return lastKey;\n}\n\nexport function listen(key, cb) {\n  const id = `${Math.random() * 1000000}-${new Date() - 1}`;\n  listeners.push({\n    id,\n    key,\n    cb: () => cb(id),\n  });\n  return id;\n}\n\nexport function unlisten(id) {\n  if (id) {\n    listeners.splice(\n      listeners.findIndex(l => l.id === id),\n      1\n    );\n  } else {\n    listeners.splice(0, listeners.length);\n  }\n}\n\nexport function listenOnce(key, cb) {\n  listen(key, (id) => {\n    cb(id);\n    unlisten(id);\n  });\n}","export const isMobile = navigator.userAgent.match(/iPhone|iPad|iPod|Android/i);","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import * as Controls from './controls';\nimport { isMobile } from './constants';\n\nexport default () => {\n  const state = {\n    snake: [\n      { y: 10, x: 10 },\n      { y: 10, x: 9 },\n      { y: 10, x: 8 },\n    ],\n    apple: { y: 10, x: 15 },\n    score: 0,\n    speed: 1,\n    countdown: 3,\n    gameover: false,\n    directionQueue: [],\n    direction: 'RIGHT',\n  }\n\n  const $gameplay = document.querySelector('.gameplay');\n  const $score = document.querySelector('.gameplay__score');\n  const $speed = document.querySelector('.gameplay__speed');\n  const $direction = document.querySelector('.gameplay__direction');\n  const $countdown = document.querySelector('.gameplay__countdown');\n  const $gameover = document.querySelector('.gameplay__gameover');\n  const $gameoverInstructions = document.querySelector('.gameplay__gameover-instructions');\n\n  const $canvas = document.getElementById('canvas');\n  $canvas.width = 400;\n  $canvas.height = 400;\n  const ctx = $canvas.getContext('2d');\n\n  function vibrate(ms) {\n    if (navigator.vibrate) {\n      navigator.vibrate(ms);\n    }\n  }\n\n  function draw(x, y, grey = false) {\n    ctx.fillStyle = grey\n      ? '#82937F'\n      : '#707070';\n    ctx.fillRect(x * 20, y * 20, 1, 20);\n    ctx.fillRect(x * 20 + 19, y * 20, 1, 20);\n    ctx.fillRect(x * 20, y * 20, 20, 1);\n    ctx.fillRect(x * 20, y * 20 + 19, 20, 1);\n    ctx.fillRect(x * 20 + 4, y * 20 + 4, 12, 12);\n  }\n\n  function collideWithSnake(x, y) {\n    return Boolean(\n      state\n        .snake\n        .find(snake => snake.x === x && snake.y === y),\n    );\n  }\n\n  function updateSpeed() {\n    state.speed += 1;\n    $speed.innerHTML = state.speed;\n  }\n\n  function updateScore() {\n    const hs = parseInt(localStorage.hs) || 0;\n    state.score += 1;\n    if (state.score > hs) localStorage.setItem('hs', state.score);\n    if (state.score % 3 === 0) updateSpeed();\n    $score.innerHTML = state.score;\n  }\n\n  function queueDirection(dir) {\n    if (state.directionQueue[state.directionQueue.length - 1] === dir) return;\n    state.directionQueue.push(dir);\n  }\n\n  function restart() {\n    // Hide gameover phrase\n    $gameover.classList.add('hidden');\n\n    // Show countdown\n    $countdown.classList.remove('hidden');\n\n    // Reset score\n    $score.innerHTML = '0';\n    $speed.innerHTML = '1';\n\n    // Reset state\n    state.snake = [\n      { y: 10, x: 10 },\n      { y: 10, x: 9 },\n      { y: 10, x: 8 },\n    ];\n    state.apple = { y: 10, x: 15 };\n    state.score = 0;\n    state.speed = 1;\n    state.countdown = 4;\n    state.gameover = false;\n    state.directionQueue = [];\n    state.direction = 'RIGHT';\n\n    // Render static snake\n    ctx.clearRect(0, 0, 400, 400);\n\n    state\n      .snake\n      .forEach(({ x, y }) => draw(x, y));\n\n    // Start countdown\n    startCountDown();\n  }\n\n  function update() {\n    const head = {...state.snake[0]};\n    const neck = state.snake[1];\n    const { apple } = state;\n\n    if (state.directionQueue.length > 0)\n      state.direction = state.directionQueue.splice(0, 1)[0];\n\n    const { direction } = state;\n\n    if (direction === 'RIGHT') {\n      head.x += 1;\n\n      // Ignore moving right if\n      // snake is moving left\n      if (head.x === neck.x && head.y === neck.y) {\n        head.x -= 2;\n      }\n    }\n\n    if (direction === 'LEFT') {\n      head.x -= 1;\n\n      // Ignore moving left if\n      // snake is moving right\n      if (head.x === neck.x && head.y === neck.y) {\n        head.x += 2;\n      }\n    }\n\n    if (direction === 'UP') {\n      head.y -= 1;\n\n      // Ignore moving up if\n      // snake is moving down\n      if (head.x === neck.x && head.y === neck.y) {\n        head.y += 2;\n      }\n    }\n\n    if (direction === 'DOWN') {\n      head.y += 1;\n\n      // Ignore moving down if\n      // snake is moving up\n      if (head.x === neck.x && head.y === neck.y) {\n        head.y -= 2;\n      }\n    }\n\n    const appleEaten = head.x === apple.x\n      && head.y === apple.y;\n\n    const collidedWall = head.x < 0\n      || head.x >= 20\n      || head.y < 0\n      || head.y >= 20;\n    \n    const collidedSnake = collideWithSnake(head.x, head.y);\n\n    state.gameover = collidedWall || collidedSnake;\n\n    if (state.gameover === false) {\n      state.snake = [\n        head,\n        ...state\n          .snake\n          .slice(0, state.snake.length - (appleEaten ? 0 : 1)),\n      ];\n    } else {\n      vibrate(1000);\n    }\n\n    if (appleEaten) {\n      const available = [];\n      for (let y = 0; y < 20; y++) {\n        for (let x = 0; x < 20; x++) {\n          if (collideWithSnake(x, y) === false)\n            available.push({ x, y });\n        }\n      }\n\n      state\n        .apple = available[Math.floor(Math.random() * available.length)];\n\n      vibrate(100);\n\n      updateScore();\n    }\n\n    render();\n  }\n\n  function render() {\n    // clear canvas\n    ctx.clearRect(0, 0, 400, 400);\n\n    if (state.gameover) {\n      // Draw canvas negative\n      for (let y = 0; y < 20; y++) {\n        for (let x = 0; x < 20; x++) {\n          if (collideWithSnake(x, y) === false)\n            draw(x, y);\n        }\n      }\n\n      // Show gameover message\n      $gameover.classList.remove('hidden');\n\n      // On click enter, reset state\n      Controls.listenOnce(Controls.KEYS.ENTER, restart);\n    } else {\n      // render snake\n      state\n        .snake\n        .forEach(({ x, y }) => draw(x, y));\n\n      // render apple\n      draw(state.apple.x, state.apple.y, true);\n\n      let timeout = 320 - (state.speed * 16);\n      if (timeout < 16) timeout = 16;\n      setTimeout(update, timeout);\n    }\n  }\n\n  function startCountDown() {\n    state.countdown -= 1;\n\n    if (state.countdown === 0) {\n      $countdown.classList.add('hidden');\n      update();\n      return;\n    }\n\n    $countdown.innerHTML = state.countdown;\n    setTimeout(startCountDown, 1000);\n  }\n\n  Controls.listen(Controls.KEYS.RIGHT, () => {\n    queueDirection('RIGHT');\n    $direction.innerHTML = 'R';\n  });\n\n  Controls.listen(Controls.KEYS.LEFT, () => {\n    queueDirection('LEFT');\n    $direction.innerHTML = 'L';\n  });\n\n  Controls.listen(Controls.KEYS.UP, () => {\n    queueDirection('UP');\n    $direction.innerHTML =  'U';\n  });\n\n  Controls.listen(Controls.KEYS.DOWN, () => {\n    queueDirection('DOWN');\n    $direction.innerHTML = 'D';\n  });\n\n  // Show gameplay screen\n  $gameplay.classList.remove('hidden');\n  \n  // Write gameover instructions\n  $gameoverInstructions.innerHTML = isMobile\n    ? 'Tap to restart'\n    : 'Press ENTER to restart';\n\n  // Start count down\n  setTimeout(startCountDown, 1000);\n\n  // Render static snake\n  state\n    .snake\n    .forEach(({ x, y }) => draw(x, y));\n}\n","import * as serviceWorker from './serviceWorker';\nimport intro from './intro';\nimport './style.css';\n\n// Initialize Intro\nintro();\n\nfunction onResize() {\n  const $game = document.querySelector('.game');\n  $game.setAttribute('style', '');\n\n  const rect = $game.getBoundingClientRect();\n\n  const wWidth = window.innerWidth - 64;\n  const wHeight = window.innerHeight - 64;\n\n  if (rect.width > rect.height) {\n    // landscape\n    const height = wWidth * 0.5628;\n    \n    if (height > wHeight) {\n      const width = wHeight * 1.77777777778;\n      $game.style.width = `${width}px`;\n      $game.style.height = `${wHeight}px`;\n      return;\n    }\n\n    $game.style.width = `${wWidth}px`;\n    $game.style.height = `${height}px`;\n    return;\n  }\n\n\n  // portrait\n  const width = wHeight * 0.5628;\n  $game.style.width = `${width}px`;\n  $game.style.height = `${wHeight}px`;\n}\n\nwindow.addEventListener('load', onResize);\nwindow.addEventListener('resize', onResize);\n\n// Hack to prevent iOS from bouncing\n// when swiping up and down\ndocument.addEventListener('touchmove', (evt) => {\n  evt.preventDefault();\n}, { passive: false });\n\nserviceWorker.register();","import * as Controls from './controls';\nimport { isMobile } from './constants';\nimport Gameplay from './gameplay';\n\nexport default () => {\n  const $intro = document.querySelector('.intro');\n\n  // Update high score\n  const $hs = document.querySelector('.intro__hs__number');\n  $hs.innerHTML = localStorage.getItem('hs') || 0;\n\n  // Update instructions\n  const $instructions = document.querySelector('.intro__instructions');\n  $instructions.innerHTML = isMobile\n    ? 'Tap to start'\n    : 'Press ENTER to start';\n  \n  function goToMenu() {\n    $intro.classList.add('hidden');\n    Gameplay();\n  }\n\n  Controls.listenOnce(Controls.KEYS.ENTER, goToMenu);\n}\n"],"sourceRoot":""}